<script>
(function () {
    // Função para obter o valor de um parâmetro da URL
    function getParameterByName(name, url) {
        if (!url) url = window.location.href;
        name = name.replace(/[\[\]]/g, "\\$&");
        var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
            results = regex.exec(url);
        if (!results) return null;
        if (!results[2]) return '';
        return decodeURIComponent(results[2].replace(/\+/g, " "));
    }

    // Função para definir um cookie com domínio
    function setCookie(cookieName, cookieValue, expirationTime) {
        var cookiePath = "/";
        expirationTime = expirationTime * 1000; // Converter para milissegundos
        var date = new Date();
        var now = date.getTime();
        date.setTime(now + expirationTime);
        var expires = date.toUTCString();
        var domain = ".seudominio.com";
        document.cookie = cookieName + "=" + cookieValue + "; expires=" + expires + "; path=" + cookiePath + "; domain=" + domain;
    }

    // Função para obter o valor de um cookie pelo nome
    function getCookieValue(name) {
        var nameEQ = name + "=";
        var ca = document.cookie.split(';');
        for (var i = 0; i < ca.length; i++) {
            var c = ca[i].trim();
            if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length);
        }
        return null;
    }

    // Função para obter host do referrer
    function getReferrerHost() {
        var a = document.createElement('a');
        a.href = document.referrer;
        return a.hostname;
    }

    // Definir nome do cookie index e obter valor
    var cookieName = "index";
    var indexValue = getCookieValue(cookieName);

    // fallback para localStorage
    if (!indexValue) {
        indexValue = localStorage.getItem(cookieName);
    }

    // valor padrão via GTM
    if (!indexValue || indexValue === '') {
        indexValue = {{event_id}};
    }

    // Armazenar index em cookie/storage
    var expiration = 34560000; // um ano em segundos
    setCookie(cookieName, indexValue, expiration);
    localStorage.setItem(cookieName, indexValue);
    sessionStorage.setItem(cookieName, indexValue);

    // Salvar data de entrada
    var dateCookie = "entry_date";
    var entryDate = getCookieValue(dateCookie);
    if (!entryDate) {
        entryDate = new Date().getTime().toString();
        setCookie(dateCookie, entryDate, expiration);
        localStorage.setItem(dateCookie, entryDate);
        sessionStorage.setItem(dateCookie, entryDate);
    }

    // Parâmetros de anúncio
    var adParams = ['fbclid', 'gclid'];
    var isAd = false;
    for (var i = 0; i < adParams.length; i++) {
        if (getParameterByName(adParams[i])) {
            isAd = true;
            break;
        }
    }

    // Capturar UTMs com fallback de referrer para utm_source
    var utmSource = getParameterByName('utm_source')
        || (document.referrer ? (getParameterByName('utm_source', document.referrer) || getReferrerHost()) : 'direto');
    var utmMedium   = getParameterByName('utm_medium');
    var utmCampaign = getParameterByName('utm_campaign');
    // Removemos leitura de utm_content externo:
    // var utmContent = getParameterByName('utm_content');
    var utmTerm     = getParameterByName('utm_term');

    // Gravar UTMs em cookies (exceto orgânico)
    if ((isAd || utmSource) && utmSource.toLowerCase() !== 'organico') {
        if (utmSource)   setCookie('cookieUtmSource',   utmSource,   expiration * 2);
        if (utmMedium)   setCookie('cookieUtmMedium',   utmMedium,   expiration * 2);
        if (utmCampaign) setCookie('cookieUtmCampaign', utmCampaign, expiration * 2);
        // Não gravamos utm_content externo
        if (utmTerm)     setCookie('cookieUtmTerm',     utmTerm,     expiration * 2);
    }

    // Parametros atuais da URL
    var currentSearch = window.location.search.substring(1);
    var paramsObj = {};
    if (currentSearch) {
        currentSearch.split('&').forEach(function(pair) {
            var p = pair.split('=');
            if (p.length === 2) paramsObj[decodeURIComponent(p[0])] = decodeURIComponent(p[1]);
        });
    }

    // ── FORÇAR utm_content PARA indexValue SEM CONDIÇÃO ──
    paramsObj.utm_content = indexValue;

    // Adicionar utm_medium com valores dos cookies UTM se faltar
    if (!paramsObj.utm_medium) {
        var medArr = [];
        ['cookieUtmSource','cookieUtmCampaign','cookieUtmContent','cookieUtmTerm'].forEach(function(c) {
            var v = getCookieValue(c);
            if (v) medArr.push(v);
        });
        if (medArr.length) paramsObj.utm_medium = medArr.join('|');
    }

    // Garantir utm_source na URL
    if (!paramsObj.utm_source) {
        paramsObj.utm_source = utmSource;
    }

    // Reconstruir querystring SEMPRE que utm_content for sobrescrito
    var modified = true;
    if (modified) {
        var newQ = '?';
        var first = true;
        for (var k in paramsObj) {
            if (first) first = false;
            else newQ += '&';
            newQ += encodeURIComponent(k) + '=' + encodeURIComponent(paramsObj[k]);
        }
        var newUrl = window.location.protocol + '//' + window.location.host + window.location.pathname + newQ + window.location.hash;
        window.history.replaceState(null, null, newUrl);
    }

    // Atualizar links e iframes
    function updateHref(el, href) {
        try {
            var a = document.createElement('a');
            a.href = href;
            var searchParams = new URLSearchParams(a.search);

            // FORÇA utm_content
            searchParams.set('utm_content', indexValue);

            // utm_medium se faltar
            if (!searchParams.has('utm_medium')) {
                var mv = [];
                ['cookieUtmSource','cookieUtmCampaign','cookieUtmContent','cookieUtmTerm'].forEach(function(c) {
                    var v = getCookieValue(c);
                    if (v) mv.push(v);
                });
                if (mv.length) searchParams.set('utm_medium', mv.join('|'));
            }

            // utm_source se faltar
            if (!searchParams.has('utm_source')) {
                searchParams.set('utm_source', utmSource);
            }

            return a.protocol + '//' + a.host + a.pathname + '?' + searchParams.toString() + a.hash;
        } catch(e) {
            console.error('updateHref error', e);
            return href;
        }
    }

    var links = document.getElementsByTagName('a');
    for (var j = 0; j < links.length; j++) {
        links[j].href = updateHref(links[j], links[j].href);
    }
    var iframes = document.getElementsByTagName('iframe');
    for (var j = 0; j < iframes.length; j++) {
        var srcAtt = iframes[j].getAttribute('data-src') || iframes[j].src;
        iframes[j].setAttribute('data-src', updateHref(iframes[j], srcAtt));
    }
})();
</script>
